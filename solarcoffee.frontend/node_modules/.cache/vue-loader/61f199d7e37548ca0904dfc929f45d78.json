{"remainingRequest":"/Users/kimsanghun/Documents/SolarCoffee/solarcoffee.frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/kimsanghun/Documents/SolarCoffee/solarcoffee.frontend/src/views/Orders.vue?vue&type=style&index=0&id=4b6b7b1f&scoped=true&lang=scss&","dependencies":[{"path":"/Users/kimsanghun/Documents/SolarCoffee/solarcoffee.frontend/src/views/Orders.vue","mtime":1615709297234},{"path":"/Users/kimsanghun/Documents/SolarCoffee/solarcoffee.frontend/node_modules/css-loader/dist/cjs.js","mtime":1615150640918},{"path":"/Users/kimsanghun/Documents/SolarCoffee/solarcoffee.frontend/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1615150641385},{"path":"/Users/kimsanghun/Documents/SolarCoffee/solarcoffee.frontend/node_modules/postcss-loader/src/index.js","mtime":1613304108506},{"path":"/Users/kimsanghun/Documents/SolarCoffee/solarcoffee.frontend/node_modules/sass-loader/dist/cjs.js","mtime":1615150644570},{"path":"/Users/kimsanghun/Documents/SolarCoffee/solarcoffee.frontend/node_modules/cache-loader/dist/cjs.js","mtime":1615150631837},{"path":"/Users/kimsanghun/Documents/SolarCoffee/solarcoffee.frontend/node_modules/vue-loader/lib/index.js","mtime":1615150641385}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCkBpbXBvcnQgInNyYy9zY3NzL2dsb2JhbC5zY3NzIjsKLmdyZWVuIHsKICBmb250LXdlaWdodDogYm9sZDsKICBjb2xvcjogJHNvbGFyLWdyZWVuOwp9Ci5pbnZlbnRvcnktYWN0aW9ucyB7CiAgZGlzcGxheTogZmxleDsKICBtYXJnaW4tYm90dG9tOiAwLjhyZW07Cn0KLm9yZGVyLWNvbXBsZXRlIHsKICBjdXJzb3I6IHBvaW50ZXI7Cn0K"},{"version":3,"sources":["Orders.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Orders.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div class=\"orders-container\">\n    <h1 id=\"ordersTitle\">Sales Orders</h1>\n    <hr />\n    <table class=\"table\" id=\"sales-orders\" v-if=\"orders.length\">\n      <thead>\n        <tr>\n          <th>CustomerId</th>\n          <th>OrderId</th>\n          <th>Order Total</th>\n          <th>Order Status</th>\n          <th>Mark Complete</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr v-for=\"lineItem in orders\" :key=\"lineItem.id\">\n          <td>{{ lineItem.customer.id }}</td>\n          <td>{{ lineItem.id }}</td>\n          <td>{{ getTotal(lineItem) | price }}</td>\n          <td :class=\"{ green: lineItem.isPaid }\">\n            {{ getStatus(lineItem.isPaid) }}\n          </td>\n          <td>\n            <div\n              v-if=\"!lineItem.isPaid\"\n              class=\"lni lni-checkmark-circle green order-complete\"\n              @click=\"markComplete(lineItem.id)\"\n            ></div>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { Component, Vue } from \"vue-property-decorator\";\nimport { SalesOrder } from \"@/types/Order\";\nimport { LineItem } from \"@/types/Invoice\";\nimport { OrderService } from \"@/services\";\n\nconst _orderService = new OrderService();\n\n@Component({\n  name: \"Orders\",\n  components: {}\n})\nexport default class Orders extends Vue {\n  orders: SalesOrder[] = [];\n  getStatus(isPaid: boolean) {\n    return isPaid ? \"Paid in Full\" : \"Unpaid\";\n  }\n  getTotal(lineItem: SalesOrder) {\n    return lineItem.salesOrderItems.reduce(\n      (current, item: LineItem) =>\n        current + item.quantity * item.product?.price,\n      0\n    );\n  }\n  async markComplete(id: number) {\n    await _orderService.markOrderComplete(id);\n    await this.initialize();\n  }\n  async initialize(): Promise<void> {\n    this.orders = await _orderService.getAllOrders();\n  }\n  async created() {\n    await this.initialize();\n  }\n}\n</script>\n\n<style scoped lang=\"scss\">\n@import \"src/scss/global.scss\";\n.green {\n  font-weight: bold;\n  color: $solar-green;\n}\n.inventory-actions {\n  display: flex;\n  margin-bottom: 0.8rem;\n}\n.order-complete {\n  cursor: pointer;\n}\n</style>\n"]}]}