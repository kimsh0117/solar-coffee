{"remainingRequest":"/Users/kimsanghun/Documents/SolarCoffee/solarcoffee.frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/kimsanghun/Documents/SolarCoffee/solarcoffee.frontend/src/views/CreateInvoice.vue?vue&type=style&index=0&id=6cacfe47&scoped=true&lang=scss&","dependencies":[{"path":"/Users/kimsanghun/Documents/SolarCoffee/solarcoffee.frontend/src/views/CreateInvoice.vue","mtime":1615658938204},{"path":"/Users/kimsanghun/Documents/SolarCoffee/solarcoffee.frontend/node_modules/css-loader/dist/cjs.js","mtime":1615150640918},{"path":"/Users/kimsanghun/Documents/SolarCoffee/solarcoffee.frontend/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1615150641385},{"path":"/Users/kimsanghun/Documents/SolarCoffee/solarcoffee.frontend/node_modules/postcss-loader/src/index.js","mtime":1613304108506},{"path":"/Users/kimsanghun/Documents/SolarCoffee/solarcoffee.frontend/node_modules/sass-loader/dist/cjs.js","mtime":1615150644570},{"path":"/Users/kimsanghun/Documents/SolarCoffee/solarcoffee.frontend/node_modules/cache-loader/dist/cjs.js","mtime":1615150631837},{"path":"/Users/kimsanghun/Documents/SolarCoffee/solarcoffee.frontend/node_modules/vue-loader/lib/index.js","mtime":1615150641385}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCkBpbXBvcnQgInNyYy9zY3NzL2dsb2JhbC5zY3NzIjsKLmludm9pY2Utc3RlcC1hY3Rpb25zIHsKICBkaXNwbGF5OiBmbGV4OwogIHdpZHRoOiAxMDAlOwp9Ci5pbnZvaWNlLXN0ZXAgewp9Ci5pbnZvaWNlLXN0ZXAtZGV0YWlsIHsKICBtYXJnaW46IDEuMnJlbTsKfQouaW52b2ljZS1vcmRlci1saXN0IHsKICBtYXJnaW4tdG9wOiAxLjJyZW07CiAgcGFkZGluZzogMC44cmVtOwoKICAubGluZS1pdGVtIHsKICAgIGRpc3BsYXk6IGZsZXg7CiAgICBib3JkZXItYm90dG9tOiAxcHggZGFzaGVkICNjY2M7CiAgICBwYWRkaW5nOiAwLjhyZW07CiAgfQoKICAuaXRlbS1jb2wgewogICAgZmxleC1ncm93OiAxOwogIH0KfQoKLmludm9pY2UtaXRlbS1hY3Rpb25zIHsKICBmb250LXdlaWdodDogYm9sZDsKfQoKLnByaWNlLXByZS10YXggewogIGZvbnQtd2VpZ2h0OiBib2xkOwp9CgoucHJpY2UtZmluYWwgewogIGZvbnQtd2VpZ2h0OiBib2xkOwogIGNvbG9yOiAkc29sYXItZ3JlZW47Cn0KCi5kdWUgewogIGZvbnQtd2VpZ2h0OiBib2xkOwp9CgouaW52b2ljZS1oZWFkZXIgewogIHdpZHRoOiAxMDAlOwogIG1hcmdpbi1ib3R0b206IDEuMnJlbTsKfQoKLmludm9pY2UtbG9nbyB7CiAgcGFkZGluZy10b3A6IDEuNHJlbTsKICB0ZXh0LWFsaWduOiBjZW50ZXI7CgogIGltZyB7CiAgICB3aWR0aDogMjgwcHg7CiAgfQp9Cg=="},{"version":3,"sources":["CreateInvoice.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8RA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"CreateInvoice.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div class=\"create-invoice-container\">\n    <h1 id=\"invoiceTitle\">Create Invoice</h1>\n    <hr />\n\n    <div class=\"invoice-step\" v-if=\"invoiceStep === 1\">\n      <h2>Step 1: Select Customer</h2>\n      <div v-if=\"customers.length\" class=\"invoice-step-detail\">\n        <label for=\"customer\">Customer:</label>\n        <select\n          v-model=\"selectedCustomerId\"\n          class=\"invoice-customers\"\n          id=\"customer\"\n        >\n          <option disabled value=\"\">Please select a Customer</option>\n          <option v-for=\"c in customers\" :value=\"c.id\" :key=\"c.id\">{{\n            c.firstName + \" \" + c.lastName\n          }}</option>\n        </select>\n      </div>\n    </div>\n    <div class=\"invoice-step\" v-if=\"invoiceStep === 2\">\n      <h2>Step 2: Create Order</h2>\n      <div v-if=\"inventory.length\" class=\"invoice-step-detail\">\n        <label for=\"product\">Product:</label>\n        <select\n          v-model=\"newItem.product\"\n          class=\"invoice-line-item\"\n          id=\"product\"\n        >\n          <option disabled value=\"\">Please select a Product</option>\n          <option v-for=\"i in inventory\" :value=\"i.product\" :key=\"i.product.id\">\n            {{ i.product.name }}\n          </option>\n        </select>\n        <label for=\"quantity\">Quantity</label>\n        <input v-model=\"newItem.quantity\" id=\"quantity\" type=\"number\" min=\"0\" />\n      </div>\n\n      <div class=\"invoice-item-actions\">\n        <solar-button\n          :disabled=\"!newItem.product || !newItem.quantity\"\n          @button:click=\"addLineItem\"\n          >Add Line Item</solar-button\n        >\n        <solar-button\n          :disabled=\"!lineItems.length\"\n          @button:click=\"finalizeOrder\"\n          >Finalize Order</solar-button\n        >\n      </div>\n      <div class=\"invoice-order-list\" v-if=\"lineItems.length\">\n        <div class=\"runningTotal\">\n          <h3>Running Total:</h3>\n          {{ runningTotal | price }}\n        </div>\n        <hr />\n        <table class=\"table\">\n          <thead>\n            <th>Product</th>\n            <th>Description</th>\n            <th>Qty.</th>\n            <th>Price</th>\n            <th>Subtotal</th>\n          </thead>\n          <tr\n            v-for=\"lineItem in lineItems\"\n            :key=\"`index_${lineItem.product.id}`\"\n          >\n            <td>{{ lineItem.product.name }}</td>\n            <td>{{ lineItem.product.description }}</td>\n            <td>{{ lineItem.quantity }}</td>\n            <td>{{ lineItem.product.price }}</td>\n            <td>{{ (lineItem.product.price * lineItem.quantity) | price }}</td>\n          </tr>\n        </table>\n      </div>\n    </div>\n    <div class=\"invoice-step\" v-if=\"invoiceStep === 3\">\n      <h2>Step 3: Review and Submit</h2>\n      <solar-button @button:click=\"submitInvoice\">Submit Invoice</solar-button>\n      <hr />\n      <div class=\"invoice-step-detail\" id=\"invoice\" ref=\"invoice\">\n        <div class=\"invoice-logo\">\n          <img id=\"imgLogo\" alt=\"Solar Coffee logo\" src=\"../assets/logo.png\" />\n          <h3>1337 Solar Lane</h3>\n          <h3>San Somewhere, CA 900000</h3>\n          <h3>USA</h3>\n\n          <div class=\"invoice-order-list\" v-if=\"lineItems.length\">\n            <div class=\"invoice-header\">\n              <h3>Invoice: {{ new Date() | humanizeDate }}</h3>\n              <h3>\n                Customer:\n                {{\n                  this.selectedCustomer.firstName +\n                    \" \" +\n                    this.selectedCustomer.lastName\n                }}\n              </h3>\n              <h3>\n                Address: {{ this.selectedCustomer.primaryAddress.addressLine1 }}\n              </h3>\n              <h3 v-if=\"this.selectedCustomer.primaryAddress.addressLine2\">\n                {{ this.selectedCustomer.primaryAddress.addressLine2 }}\n              </h3>\n              <h3>\n                {{ this.selectedCustomer.primaryAddress.city }}\n                {{ this.selectedCustomer.primaryAddress.state }}\n                {{ this.selectedCustomer.primaryAddress.postalCode }}\n              </h3>\n              <h3>\n                {{ this.selectedCustomer.primaryAddress.country }}\n              </h3>\n            </div>\n            <table class=\"table\">\n              <thead>\n                <tr>\n                  <th>Product</th>\n                  <th>Description</th>\n                  <th>Qty.</th>\n                  <th>Price</th>\n                  <th>Subtotal</th>\n                </tr>\n              </thead>\n              <tr\n                v-for=\"lineItem in lineItems\"\n                :key=\"`index_${lineItem.product.id}`\"\n              >\n                <td>{{ lineItem.product.name }}</td>\n                <td>{{ lineItem.product.description }}</td>\n                <td>{{ lineItem.quantity }}</td>\n                <td>{{ lineItem.product.price }}</td>\n                <td>\n                  {{ (lineItem.product.price * lineItem.quantity) | price }}\n                </td>\n              </tr>\n              <tr>\n                <th colspan=\"4\"></th>\n                <th>Grand Total</th>\n              </tr>\n              <tfoot>\n                <tr>\n                  <td colspan=\"4\" class=\"due\">Balance due upon receipt:</td>\n                  <td class=\"price-final\">{{ runningTotal | price }}</td>\n                </tr>\n              </tfoot>\n            </table>\n          </div>\n        </div>\n      </div>\n    </div>\n    <hr />\n    <div class=\"invoice-step-actions\">\n      <solar-button @button:click=\"prev\" :disabled=\"!canGoPrev\"\n        >Previous</solar-button\n      >\n      <solar-button @button:click=\"next\" :disabled=\"!canGoNext\"\n        >Next</solar-button\n      >\n      <solar-button @button:click=\"startOver\">Start Over</solar-button>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { Component, Vue } from \"vue-property-decorator\";\nimport { Invoice, LineItem } from \"@/types/Invoice\";\nimport { Customer } from \"@/types/Customer\";\nimport { ProductInventory } from \"@/types/Product\";\nimport { CustomerService, InventoryService, InvoiceService } from \"@/services\";\nimport SolarButton from \"@/components/SolarButton.vue\";\nimport jsPDF from \"jspdf\";\nimport html2canvas from \"html2canvas\";\n\nconst _customerService = new CustomerService();\nconst _inventoryService = new InventoryService();\nconst _invoiceService = new InvoiceService();\n\n@Component({\n  name: \"CreateInvoice\",\n  components: { SolarButton }\n})\nexport default class CreateInvoice extends Vue {\n  invoiceStep = 1;\n  invoice: Invoice = {\n    createdOn: new Date(),\n    customerId: 0,\n    lineItems: [],\n    updatedOn: new Date()\n  };\n  selectedCustomer: Customer;\n  selectedCustomerId = 0;\n  customers: Customer[] = [];\n  inventory: ProductInventory[] = [];\n  lineItems: LineItem[] = [];\n  newItem: LineItem = {\n    product: undefined,\n    quantity: 0\n  };\n  addLineItem() {\n    const newItem: LineItem = {\n      product: this.newItem.product,\n      quantity: Number(this.newItem.quantity)\n    };\n    const existingItems = this.lineItems.map(item => item.product.id);\n\n    if (existingItems.includes(newItem.product.id)) {\n      const lineItem = this.lineItems.find(\n        item => item.product.id === newItem.product.id\n      );\n      let currentQuantity = Number(lineItem.quantity);\n      const updatedQuantity = (currentQuantity += newItem.quantity);\n      lineItem.quantity = updatedQuantity;\n    } else {\n      this.lineItems.push(this.newItem);\n    }\n    this.newItem = { product: undefined, quantity: 0 };\n  }\n  finalizeOrder() {\n    this.invoiceStep = 3;\n  }\n  startOver() {\n    this.invoice = { customerId: 0, lineItems: [] };\n    this.invoiceStep = 1;\n  }\n  get canGoNext() {\n    if (this.invoiceStep === 1) return this.selectedCustomerId !== 0;\n    if (this.invoiceStep === 2) return this.lineItems.length;\n    if (this.invoiceStep === 3) return false;\n    return false;\n  }\n\n  get canGoPrev() {\n    return this.invoiceStep !== 1;\n  }\n  get runningTotal() {\n    return this.lineItems.reduce(\n      (current, memo) => current + memo[\"product\"][\"price\"] * memo[\"quantity\"],\n      0\n    );\n  }\n  get selectedCustomer() {\n    return this.customers.find(c => c.id === this.selectedCustomerId);\n  }\n  prev(): void {\n    if (this.invoiceStep === 1) return;\n    this.invoiceStep -= 1;\n  }\n  next(): void {\n    if (this.invoiceStep === 3) return;\n    this.invoiceStep += 1;\n  }\n  async submitInvoice() {\n    this.invoice = {\n      customer: this.selectedCustomerId,\n      lineItems: this.lineItems\n    };\n\n    await _invoiceService.makeNewInvoice(this.invoice);\n    this.downloadPdf();\n    await this.$router.push(\"/orders\");\n  }\n  downloadPdf() {\n    const pdf = new jsPDF(\"p\", \"pt\", \"a4\", true);\n    const invoice = document.getElementById(\"invoice\");\n    const width = this.$refs.invoice.clientWidth;\n    const height = this.$refs.invoice.clientHeight;\n\n    html2canvas(invoice).then(canvas => {\n      const image = canvas.toDataURL(\"image/png\");\n      pdf.addImage(image, \"PNG\", 0, 0, width * 0.55, height * 0.55);\n      pdf.save(\"invoice\");\n    });\n  }\n  async initialize(): Promise<void> {\n    this.customers = await _customerService.getCustomers();\n    this.inventory = await _inventoryService.getInventory();\n  }\n  async created() {\n    await this.initialize();\n  }\n}\n</script>\n\n<style scoped lang=\"scss\">\n@import \"src/scss/global.scss\";\n.invoice-step-actions {\n  display: flex;\n  width: 100%;\n}\n.invoice-step {\n}\n.invoice-step-detail {\n  margin: 1.2rem;\n}\n.invoice-order-list {\n  margin-top: 1.2rem;\n  padding: 0.8rem;\n\n  .line-item {\n    display: flex;\n    border-bottom: 1px dashed #ccc;\n    padding: 0.8rem;\n  }\n\n  .item-col {\n    flex-grow: 1;\n  }\n}\n\n.invoice-item-actions {\n  font-weight: bold;\n}\n\n.price-pre-tax {\n  font-weight: bold;\n}\n\n.price-final {\n  font-weight: bold;\n  color: $solar-green;\n}\n\n.due {\n  font-weight: bold;\n}\n\n.invoice-header {\n  width: 100%;\n  margin-bottom: 1.2rem;\n}\n\n.invoice-logo {\n  padding-top: 1.4rem;\n  text-align: center;\n\n  img {\n    width: 280px;\n  }\n}\n</style>\n"]}]}