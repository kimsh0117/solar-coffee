{"remainingRequest":"/Users/kimsanghun/Documents/SolarCoffee/solarcoffee.frontend/node_modules/babel-loader/lib/index.js!/Users/kimsanghun/Documents/SolarCoffee/solarcoffee.frontend/node_modules/ts-loader/index.js??ref--14-2!/Users/kimsanghun/Documents/SolarCoffee/solarcoffee.frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/kimsanghun/Documents/SolarCoffee/solarcoffee.frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/kimsanghun/Documents/SolarCoffee/solarcoffee.frontend/src/views/Orders.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/Users/kimsanghun/Documents/SolarCoffee/solarcoffee.frontend/src/views/Orders.vue","mtime":1615709297234},{"path":"/Users/kimsanghun/Documents/SolarCoffee/solarcoffee.frontend/node_modules/cache-loader/dist/cjs.js","mtime":1615150631837},{"path":"/Users/kimsanghun/Documents/SolarCoffee/solarcoffee.frontend/node_modules/babel-loader/lib/index.js","mtime":1615150631849},{"path":"/Users/kimsanghun/Documents/SolarCoffee/solarcoffee.frontend/node_modules/ts-loader/index.js","mtime":1615150637072},{"path":"/Users/kimsanghun/Documents/SolarCoffee/solarcoffee.frontend/node_modules/cache-loader/dist/cjs.js","mtime":1615150631837},{"path":"/Users/kimsanghun/Documents/SolarCoffee/solarcoffee.frontend/node_modules/vue-loader/lib/index.js","mtime":1615150641385}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9Vc2Vycy9raW1zYW5naHVuL0RvY3VtZW50cy9Tb2xhckNvZmZlZS9zb2xhcmNvZmZlZS5mcm9udGVuZC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7CmltcG9ydCBfY2xhc3NDYWxsQ2hlY2sgZnJvbSAiL1VzZXJzL2tpbXNhbmdodW4vRG9jdW1lbnRzL1NvbGFyQ29mZmVlL3NvbGFyY29mZmVlLmZyb250ZW5kL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9jbGFzc0NhbGxDaGVjayI7CmltcG9ydCBfY3JlYXRlQ2xhc3MgZnJvbSAiL1VzZXJzL2tpbXNhbmdodW4vRG9jdW1lbnRzL1NvbGFyQ29mZmVlL3NvbGFyY29mZmVlLmZyb250ZW5kL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9jcmVhdGVDbGFzcyI7CmltcG9ydCBfaW5oZXJpdHMgZnJvbSAiL1VzZXJzL2tpbXNhbmdodW4vRG9jdW1lbnRzL1NvbGFyQ29mZmVlL3NvbGFyY29mZmVlLmZyb250ZW5kL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9pbmhlcml0cyI7CmltcG9ydCBfY3JlYXRlU3VwZXIgZnJvbSAiL1VzZXJzL2tpbXNhbmdodW4vRG9jdW1lbnRzL1NvbGFyQ29mZmVlL3NvbGFyY29mZmVlLmZyb250ZW5kL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9jcmVhdGVTdXBlciI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkucmVkdWNlLmpzIjsKaW1wb3J0IHsgX19kZWNvcmF0ZSB9IGZyb20gInRzbGliIjsKaW1wb3J0IHsgQ29tcG9uZW50LCBWdWUgfSBmcm9tICJ2dWUtcHJvcGVydHktZGVjb3JhdG9yIjsKaW1wb3J0IHsgT3JkZXJTZXJ2aWNlIH0gZnJvbSAiQC9zZXJ2aWNlcyI7Cgp2YXIgX29yZGVyU2VydmljZSA9IG5ldyBPcmRlclNlcnZpY2UoKTsKCnZhciBPcmRlcnMgPSAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKF9WdWUpIHsKICBfaW5oZXJpdHMoT3JkZXJzLCBfVnVlKTsKCiAgdmFyIF9zdXBlciA9IF9jcmVhdGVTdXBlcihPcmRlcnMpOwoKICBmdW5jdGlvbiBPcmRlcnMoKSB7CiAgICB2YXIgX3RoaXM7CgogICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIE9yZGVycyk7CgogICAgX3RoaXMgPSBfc3VwZXIuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICAgIF90aGlzLm9yZGVycyA9IFtdOwogICAgcmV0dXJuIF90aGlzOwogIH0KCiAgX2NyZWF0ZUNsYXNzKE9yZGVycywgW3sKICAgIGtleTogImdldFN0YXR1cyIsCiAgICB2YWx1ZTogZnVuY3Rpb24gZ2V0U3RhdHVzKGlzUGFpZCkgewogICAgICByZXR1cm4gaXNQYWlkID8gIlBhaWQgaW4gRnVsbCIgOiAiVW5wYWlkIjsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJnZXRUb3RhbCIsCiAgICB2YWx1ZTogZnVuY3Rpb24gZ2V0VG90YWwobGluZUl0ZW0pIHsKICAgICAgcmV0dXJuIGxpbmVJdGVtLnNhbGVzT3JkZXJJdGVtcy5yZWR1Y2UoZnVuY3Rpb24gKGN1cnJlbnQsIGl0ZW0pIHsKICAgICAgICB2YXIgX2l0ZW0kcHJvZHVjdDsKCiAgICAgICAgcmV0dXJuIGN1cnJlbnQgKyBpdGVtLnF1YW50aXR5ICogKChfaXRlbSRwcm9kdWN0ID0gaXRlbS5wcm9kdWN0KSA9PT0gbnVsbCB8fCBfaXRlbSRwcm9kdWN0ID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfaXRlbSRwcm9kdWN0LnByaWNlKTsKICAgICAgfSwgMCk7CiAgICB9CiAgfSwgewogICAga2V5OiAibWFya0NvbXBsZXRlIiwKICAgIHZhbHVlOiBmdW5jdGlvbiAoKSB7CiAgICAgIHZhciBfbWFya0NvbXBsZXRlID0gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKGlkKSB7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDI7CiAgICAgICAgICAgICAgICByZXR1cm4gX29yZGVyU2VydmljZS5tYXJrT3JkZXJDb21wbGV0ZShpZCk7CgogICAgICAgICAgICAgIGNhc2UgMjoKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA0OwogICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuaW5pdGlhbGl6ZSgpOwoKICAgICAgICAgICAgICBjYXNlIDQ6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlLCB0aGlzKTsKICAgICAgfSkpOwoKICAgICAgZnVuY3Rpb24gbWFya0NvbXBsZXRlKF94KSB7CiAgICAgICAgcmV0dXJuIF9tYXJrQ29tcGxldGUuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICAgICAgfQoKICAgICAgcmV0dXJuIG1hcmtDb21wbGV0ZTsKICAgIH0oKQogIH0sIHsKICAgIGtleTogImluaXRpYWxpemUiLAogICAgdmFsdWU6IGZ1bmN0aW9uICgpIHsKICAgICAgdmFyIF9pbml0aWFsaXplID0gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMigpIHsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTIkKF9jb250ZXh0MikgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDIucHJldiA9IF9jb250ZXh0Mi5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSAyOwogICAgICAgICAgICAgICAgcmV0dXJuIF9vcmRlclNlcnZpY2UuZ2V0QWxsT3JkZXJzKCk7CgogICAgICAgICAgICAgIGNhc2UgMjoKICAgICAgICAgICAgICAgIHRoaXMub3JkZXJzID0gX2NvbnRleHQyLnNlbnQ7CgogICAgICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlMiwgdGhpcyk7CiAgICAgIH0pKTsKCiAgICAgIGZ1bmN0aW9uIGluaXRpYWxpemUoKSB7CiAgICAgICAgcmV0dXJuIF9pbml0aWFsaXplLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgICAgIH0KCiAgICAgIHJldHVybiBpbml0aWFsaXplOwogICAgfSgpCiAgfSwgewogICAga2V5OiAiY3JlYXRlZCIsCiAgICB2YWx1ZTogZnVuY3Rpb24gKCkgewogICAgICB2YXIgX2NyZWF0ZWQgPSBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUzKCkgewogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMyQoX2NvbnRleHQzKSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0My5wcmV2ID0gX2NvbnRleHQzLm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBfY29udGV4dDMubmV4dCA9IDI7CiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5pbml0aWFsaXplKCk7CgogICAgICAgICAgICAgIGNhc2UgMjoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0My5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlMywgdGhpcyk7CiAgICAgIH0pKTsKCiAgICAgIGZ1bmN0aW9uIGNyZWF0ZWQoKSB7CiAgICAgICAgcmV0dXJuIF9jcmVhdGVkLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgICAgIH0KCiAgICAgIHJldHVybiBjcmVhdGVkOwogICAgfSgpCiAgfV0pOwoKICByZXR1cm4gT3JkZXJzOwp9KFZ1ZSk7CgpPcmRlcnMgPSBfX2RlY29yYXRlKFtDb21wb25lbnQoewogIG5hbWU6ICJPcmRlcnMiLAogIGNvbXBvbmVudHM6IHt9Cn0pXSwgT3JkZXJzKTsKZXhwb3J0IGRlZmF1bHQgT3JkZXJzOw=="},{"version":3,"sources":["/Users/kimsanghun/Documents/SolarCoffee/solarcoffee.frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/kimsanghun/Documents/SolarCoffee/solarcoffee.frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/kimsanghun/Documents/SolarCoffee/solarcoffee.frontend/src/views/Orders.vue?vue&type=script&lang=ts&"],"names":[],"mappings":";;;;;;;;AAoCA,SAAS,SAAT,EAAoB,GAApB,QAA+B,wBAA/B;AAGA,SAAS,YAAT,QAA6B,YAA7B;;AAEA,IAAM,aAAa,GAAG,IAAI,YAAJ,EAAtB;;AAMA,IAAqB,MAArB;AAAA;;AAAA;;AAAA,oBAAA;AAAA;;AAAA;;;AACE,UAAA,MAAA,GAAuB,EAAvB;AADF;AAsBC;;AAtBD;AAAA;AAAA,WAEE,mBAAU,MAAV,EAAyB;AACvB,aAAO,MAAM,GAAG,cAAH,GAAoB,QAAjC;AACD;AAJH;AAAA;AAAA,WAKE,kBAAS,QAAT,EAA6B;AAC3B,aAAO,QAAQ,CAAC,eAAT,CAAyB,MAAzB,CACL,UAAC,OAAD,EAAU,IAAV;AAAA;;AAAA,eACE,OAAO,GAAG,IAAI,CAAC,QAAL,qBAAgB,IAAI,CAAC,OAArB,kDAAgB,cAAc,KAA9B,CADZ;AAAA,OADK,EAGL,CAHK,CAAP;AAKD;AAXH;AAAA;AAAA;AAAA,kFAYE,iBAAmB,EAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACQ,aAAa,CAAC,iBAAd,CAAgC,EAAhC,CADR;;AAAA;AAAA;AAAA,uBAEQ,KAAK,UAAL,EAFR;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAZF;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gFAgBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACsB,aAAa,CAAC,YAAd,EADtB;;AAAA;AACE,qBAAK,MADP;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAhBF;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6EAmBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACQ,KAAK,UAAL,EADR;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAnBF;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA,EAAoC,GAApC,CAAA;;AAAqB,MAAM,GAAA,UAAA,CAAA,CAJ1B,SAAS,CAAC;AACT,EAAA,IAAI,EAAE,QADG;AAET,EAAA,UAAU,EAAE;AAFH,CAAD,CAIiB,CAAA,EAAN,MAAM,CAAN;eAAA,M","sourcesContent":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport { Component, Vue } from \"vue-property-decorator\";\nimport { SalesOrder } from \"@/types/Order\";\nimport { LineItem } from \"@/types/Invoice\";\nimport { OrderService } from \"@/services\";\n\nconst _orderService = new OrderService();\n\n@Component({\n  name: \"Orders\",\n  components: {}\n})\nexport default class Orders extends Vue {\n  orders: SalesOrder[] = [];\n  getStatus(isPaid: boolean) {\n    return isPaid ? \"Paid in Full\" : \"Unpaid\";\n  }\n  getTotal(lineItem: SalesOrder) {\n    return lineItem.salesOrderItems.reduce(\n      (current, item: LineItem) =>\n        current + item.quantity * item.product?.price,\n      0\n    );\n  }\n  async markComplete(id: number) {\n    await _orderService.markOrderComplete(id);\n    await this.initialize();\n  }\n  async initialize(): Promise<void> {\n    this.orders = await _orderService.getAllOrders();\n  }\n  async created() {\n    await this.initialize();\n  }\n}\n"],"sourceRoot":""}]}